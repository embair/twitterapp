import 'whatwg-fetch';
import React, { Component } from 'react';
import SearchBox from './SearchBox.js';
import { Table } from 'react-bootstrap';
import assert from 'assert';
import moment from 'moment';

class App extends Component {
    constructor() {
        super();
        this.state = {
            tweets : [],
            isLoading : false,
            orderBy : 'id',
            ascending : true,
        }
        //Temporary
        this.onClick('reactjs');
    }

    onClick(searchUser) {
        //TODO url encode
        fetch("/tweets?u="+searchUser).then((response) => {
            //TODO error handling
            return response.text();
        }).then((body)=> {
            console.log(JSON.parse(body));
            this.loadTweets(Array.from(JSON.parse(body)));
        });
    }

    // load tweets from the timeline object generated by Twitter API
    loadTweets(timeline) {
        var transformed = timeline.map((tweet,i) => {
            return {
                id: i,
                text: tweet.text,
                favs: Number.parseInt(tweet.favorite_count, 10),
                date: moment(tweet.created_at)
            }
        });

        this.setState({tweets: transformed});
    }

    toggleSort(field) {
        assert.equal(typeof field,"string");
        if (this.state.orderBy === field) {
            this.setState({ ascending : !this.state.ascending });
        } else {
            this.setState({ orderBy : field });
        }
    }

    render() {
        return (
            <div className="container">
                <SearchBox onClick={this.onClick.bind(this)}/>
                <Table striped bordered condensed hover>
                    <thead>
                        <tr>
                            <th onClick={this.toggleSort.bind(this,'id')}>#</th>
                            <th onClick={this.toggleSort.bind(this,'text')}>text</th>
                            <th onClick={this.toggleSort.bind(this,'favs')}>favs</th>
                            <th onClick={this.toggleSort.bind(this,'date')}>sent at</th>
                        </tr>
                    </thead>
                    <tbody>
                         {this.state.tweets
                            .sort((a,b) => {
                                const va = a[this.state.orderBy];
                                const vb = b[this.state.orderBy];
                                if (va === vb) return 0;
                                if (va > vb) return 1 * (this.state.ascending?1:-1);
                                return -1 * (this.state.ascending?1:-1);
                            })
                            .map((tweet, i)=> {
                            return (
                                <tr key={tweet.id}>
                                    <td>{tweet.id}</td>
                                    <td>{tweet.text}</td>
                                    <td>{tweet.favs}</td>
                                    <td>{tweet.date.format('lll')}</td>
                                </tr>
                            );
                         })}
                    </tbody>
                </Table>
            </div>
        );
    }
}

export default App;
